// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Villa.Data;

#nullable disable

namespace Villa.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250423073831_up-database23")]
    partial class updatabase23
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Villa.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Pool, Gym",
                            CreatedDate = new DateTime(2025, 4, 23, 11, 8, 30, 705, DateTimeKind.Local).AddTicks(1815),
                            Details = "Luxurious villa with a private pool and gym.",
                            ImageUrl = "https://example.com/royal-villa.jpg",
                            Name = "Royal Villa",
                            Occupancy = 5,
                            Rate = 200.0,
                            Sqft = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Beach Access, Spa",
                            CreatedDate = new DateTime(2025, 4, 23, 11, 8, 30, 708, DateTimeKind.Local).AddTicks(143),
                            Details = "Beautiful villa with direct beach access and spa services.",
                            ImageUrl = "https://example.com/beachfront-villa.jpg",
                            Name = "Beachfront Villa",
                            Occupancy = 4,
                            Rate = 250.0,
                            Sqft = 400,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Hiking, Fireplace",
                            CreatedDate = new DateTime(2025, 4, 23, 11, 8, 30, 708, DateTimeKind.Local).AddTicks(156),
                            Details = "Cozy villa with stunning mountain views and a fireplace.",
                            ImageUrl = "https://example.com/mountain-view-villa.jpg",
                            Name = "Mountain View Villa",
                            Occupancy = 6,
                            Rate = 180.0,
                            Sqft = 600,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Private Chef, Pool",
                            CreatedDate = new DateTime(2025, 4, 23, 11, 8, 30, 708, DateTimeKind.Local).AddTicks(158),
                            Details = "Spacious villa with a private chef and pool.",
                            ImageUrl = "https://example.com/luxury-villa.jpg",
                            Name = "Luxury Villa",
                            Occupancy = 8,
                            Rate = 300.0,
                            Sqft = 800,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
